

3


Prize pool

50,000 USD

event timeline
5 days left for submission
Upcoming
Submission
2025/09/01 06:00
Deadline
2025/09/30 17:59
Virtual
Hackathon Tags
Blockchain
DeFi
Gaming
Solidity
AI
web3 ecosystem
Ethereum
Avalanche
Base
BNB Smart Chain
Arbitrum
Submission Requirements
GitHub/Gitlab/Bitbucket Link Required
Demo Video Required

Reactive Network
BUIDL with REACT: Fast-track to mainnet
Details
BUIDLs
Hackers
126
Join a Team
New
Tracks
Announcements
Ask Question
Ideas
Outline

üöÄ BUIDL with REACT
üë§Who This Is For
‚öôÔ∏èHow It Works
‚ö°Ô∏èWhy Reactive?
üèÜ Prizes
üí¨ Official Communication Channel
üìÖ Key Dates
üí™Getting Started
üîéJudging Criteria
üöÄ BUIDL with REACT
Welcome to the BUIDL with REACT! Reactive Network invites blockchain developers and startups who are already building a project to participate in our building competition. This event is your opportunity to innovate with your dApps using Reactive Network.

Reactive Network is at the forefront of blockchain evolution, offering a fully EVM-compatible execution layer that empowers developers to build the next wave of decentralized applications. Unlike traditional smart contracts, Reactive Smart Contracts autonomously react to on-chain events, driving interactions across multiple blockchains without user intervention.

üë§Who This Is For
Developers or teams building any blockchain use case
Anyone interested in experimenting with Reactive Smart Contracts
Builders ready to ship to mainnet
‚öôÔ∏èHow It Works
Phase 1: Building Period (4 weeks). Sept 1 - 30
Teams will build and deploy a working project using Reactive Smart Contracts. This can be in DeFi, infrastructure, DAOs, tooling‚Äîanything that makes sense with cross-chain automation or onchain logic.

Deliverables:

Live dApp deployed to mainnet using Reactive
GitHub repository
Short write-up / pitch deck / video explaining the idea and implementation
üí° Note: dApps must be capable of running indefinitely, assuming they are sufficiently funded with REACT. This tests product durability and incentive alignment.

Phase 2: Usage Tracking (4 weeks). Oct 1 - 30
We will start measuring on-chain usage during this period. It will be happening simultaneously with Phase 3 below.

Phase 3: Assessment Period. By Nov 1
Projects will be evaluated based on these criteria:

60% Use Case & Longevity (How useful, scalable, and sustainable the idea is)
40% Reactive Usage (Number of transactions + REACT gas used)
‚ö°Ô∏èWhy Reactive?
Screenshot 2024-08-07 151621.png

Reactive Smart Contracts
Autonomously react to blockchain events, automating complex financial instruments and DeFi applications. Learn more

Start Building
To learn how to start building, visit our documentation.

üèÜ Prizes
We‚Äôll allocate a $50,000 prize pool to be distributed among the top-performing projects
Innovation Track (Main Track). Prize sizes will range from $1,000 to $5,000 depending on the quality of the submitted applications.
Winner of the Innovation Track will also receive $5000 in smart contract audit credits provided by our partners, Quill Audits (see details below)*.
Rest of the tracks. Prizes range from $200 to $500, based on the judging criteria outlined below.
Remember that to be eligible for a prize in these tracks you MUST apply for the Innovation Track as well. Even if you don't receive a prize in Innovation Track, you are still eligible for the prizes in these tracks.
In addition to monetary prices, winners will receive:

Marketing support
Technical assistance
Intros to VCs
20% off for audit services by QuillAudits
Priority access to our $3M DeveloperFund and future accelerator/incubator programs
**$5000 in smart contract audit credits from Quill Audits. How it works: Covers 50% of costs with rest payable by the winner; Audit credits are redeemable for a single audit engagement covering up to 600 nLoC; If the audit scope exceeds the value of the pledged credits, the Winner shall bear the difference; The Winner must initiate the redemption process within 3 months of the event‚Äôs conclusion and complete onboarding within 6 months. The credits are non-transferable, non-refundable, and can only be used by the officially recognized Winner.*

üí¨ Official Communication Channel
We will mainly provide support on the official Reactive Network Telegram channel.

üìÖ Key Dates
September 1 (Mon) -- Start of the competition
September 1 (Mon) -- Workshop I. Recording: https://www.youtube.com/watch?v=S0gY1lra5xI
September 8th (Mon), 5PM UTC -- Workshop II. Watch here: https://www.youtube.com/watch?v=MMEJyBpp854
September 18th (Thursday), 2 PM UTC ‚Äî Workshop III. Watch here: https://www.youtube.com/watch?v=WJox52Q-F4s
September 30th (Tue) -- End of the competition
Oct 1st - Oct 28th -- Review period
TBA -- Winners announcement
üí™Getting Started
Below you can find the links to all the materials you will need to build on Reactive Network:

First of all, feel free to join our Developer Chat (https://t.me/reactivedevs) and ask any technical or use case questions.
Take a look at our educational course (it‚Äôs pretty short) to grasp the basic concepts of what Reactive Smart Contracts (RSCs) are and what they can be used for: https://dev.reactive.network/education/module-1/reactive-smart-contracts
However, if you already have a general idea, you might jump straight to the code examples. We recommend starting with Stop Order use case, you might even use it as a boilerplate project for your hackathon submission: https://github.com/Reactive-Network/reactive-smart-contract-demos/tree/main/src/demos/uniswap-v2-stop-order
Below you will find our previous hackathon winners applications. Use them for inspiration and technical solutions, but don‚Äôt copy the use cases that have already been implemented: https://dorahacks.io/hackathon/reactive-hackathon/winner
See network and faucet information (https://dev.reactive.network/reactive-mainnet - the testnet is there, too). You can also ask us to send you some testnet REACT in our dev chat, if you don‚Äôt get enough REACT from the faucet.
To understand the nuances better, take a look at our documentation. Basically, RSCs are almost like usual Solidity smart contracts, with the difference that their main purpose is reactivity. So, read a bit about subscribing to events (https://dev.reactive.network/subscriptions) and reacting to events by sending callbacks (https://dev.reactive.network/events-&-callbacks).
The last two important concepts are ReactVM dual-state environment (https://dev.reactive.network/reactvm) and paying for callbacks (https://dev.reactive.network/economy).
üîéJudging Criteria
A successful application MUST:

Utilize Reactive Smart Contracts in a meaningful way. Simply deploying standard Solidity contracts on the Reactive Network is not enough. Your solution MUST incorporate reactivity‚ÄîRSCs should respond to EVM events and trigger transactions accordingly.
It MUST be deployed on Reactive Mainnet
It MUST be a live product which already can show some traction.
It MUST —Åontain the Reactive Smart Contracts and Destination smart contracts, the deploy script, and the instructions for it.
If the application uses its own Origin contracts, the repository MUST also include these contracts, along with their deploy scripts and instructions.
It MUST contain the address of the Reactive Smart Contracts deployed by the team.
It MUST contain the addresses of the Origins and Destination smart contracts.
It MUST contain a detailed explanation of the problem Reactive Smart Contracts solve in that use case and why it is more difficult or even impossible to solve it without them.
It MUST contain the step-by-step text description of how this setup works after being deployed.
The team MUST run this workflow. The application MUST include the transaction hashes for every step of the workflow, for Origin transactions, Reactive transactions, and Destination transactions.
The application MUST contain a presentation/demo video, no longer than 5 minutes. The video might contain slides, narration, app or code demonstration, depending on what the team finds more persuasive. The judges from Reactive team will watch the video/read pitch deck/write-up, as well as read the code and the docs.
The applications will be evaluated based on the following criteria:

Whether Reactive Smart Contracts in this use case solve an important problem that could not be solved or could be solved less optimally without them.
How clearly the use case is explained and justified.
Reactive Usage ‚Äì number of transactions and REACT gas used
Code quality, security, readability.
DoraHacks
FOLLOW US
About
Jobs
Hiring
Dora Research Blog
DoraHacks Blog
Dora Factory
Changelog
Resources
MACI/aMACI Voting
Host a Hackathon
Contact us

Report Issue

Message
Telegram ‚Üó
Discord ‚Üó
Email ‚Üó
¬© 2025 DoraHacks. All rights reserved.

Code of conduct
|
Privacy policy
|
Terms of service
Share